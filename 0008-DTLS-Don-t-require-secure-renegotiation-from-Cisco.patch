diff --git a/openssl-dtls.c b/openssl-dtls.c
index 90cbdc6..c4bd7f2 100644
--- a/openssl-dtls.c
+++ b/openssl-dtls.c
@@ -425,6 +425,15 @@ int start_dtls_handshake(struct openconnect_info *vpninfo, int dtls_fd)
 		 */
 		SSL_CTX_set_options(vpninfo->dtls_ctx, SSL_OP_NO_ENCRYPT_THEN_MAC);
 #endif
+#ifdef SSL_OP_LEGACY_SERVER_CONNECT
+			/*
+			 * Since https://github.com/openssl/openssl/pull/15127, OpenSSL
+			 * *requires* secure renegotiation support by default. For interop
+			 * with Cisco's resumed DTLS sessions, we have to turn that off.
+			 */
+			if (dtlsver)
+				SSL_CTX_set_options(vpninfo->dtls_ctx, SSL_OP_LEGACY_SERVER_CONNECT);
+#endif
 #ifdef SSL_OP_NO_EXTENDED_MASTER_SECRET
 		/* RFC7627 says:
 		 *
diff --git a/tests/bad_dtls_test.c b/tests/bad_dtls_test.c
index c123c8f..85f023a 100644
--- a/tests/bad_dtls_test.c
+++ b/tests/bad_dtls_test.c
@@ -788,7 +788,8 @@ int main(int argc, char *argv[])
     ctx = SSL_CTX_new(DTLS_client_method());
     if (ctx == NULL ||
 	!SSL_CTX_set_min_proto_version(ctx, DTLS1_BAD_VER) ||
-	!SSL_CTX_set_max_proto_version(ctx, DTLS1_BAD_VER)) {
+	!SSL_CTX_set_max_proto_version(ctx, DTLS1_BAD_VER) ||
+	!SSL_CTX_set_options(ctx, SSL_OP_LEGACY_SERVER_CONNECT)) {
         printf("Failed to allocate SSL_CTX\n");
         goto end_md;
     }
